{
  "info": {
    "description": "Commonalities - Common data and errors for CAMARA APIs",
    "version": "0.1.0",
    "title": "Common data and errors for CAMARA APIs",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Sample",
      "email": "project-email@sample.com"
    }
  },
  "definitions": {
    "MoneyAmount": {
      "type": "object",
      "description": "Money amount",
      "required": [
        "value",
        "currency"
      ],
      "properties": {
        "value": {
          "type": "number",
          "format": "float",
          "multipleOf": 0.01,
          "description": "Amount value"
        },
        "currency": {
          "type": "string",
          "description": "Currency code in which the amount is expressed. ISO 4217"
        },
        "tax_included": {
          "type": "boolean",
          "description": "true if the amount includes government taxes",
          "default": false
        }
      }
    },
    "Address": {
      "type": "object",
      "description": "User's address information",
      "required": [
        "formatted"
      ],
      "properties": {
        "formatted": {
          "type": "string",
          "description": "Full address, formatted for display"
        },
        "street_address": {
          "type": "string",
          "description": "Address information"
        },
        "postal_code": {
          "type": "string",
          "description": "Postal code associated to the address"
        },
        "locality": {
          "type": "string",
          "description": "City or locality where the user lives"
        },
        "country": {
          "type": "string",
          "description": "Country name. Format iso3166-1"
        }
      }
    },
    "Coordinates": {
      "type": "object",
      "description": "Coordinates of a geographical location",
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "description": "latitude coordinate of a geographical location expressed in decimal degress.",
          "type": "number",
          "format": "float",
          "minimum": -90,
          "maximum": 90,
          "multipleOf": 1e-06
        },
        "longitude": {
          "description": "longitude coordinate of a geographical location expressed in decimal degress.",
          "type": "number",
          "format": "float",
          "minimum": -180,
          "maximum": 180,
          "multipleOf": 1e-06
        }
      }
    },
    "TimePeriod": {
      "properties": {
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "An instant of time, starting of the TimePeriod"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "An instant of time, ending of the TimePeriod. If not included, then the period has no ending date"
        }
      },
      "required": [
        "start_date"
      ]
    },
    "ModelError": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "A human readable description of what the event represent"
        }
      }
    },
    "InvalidArgument": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "INVALID_ARGUMENT"
              ],
              "default": "INVALID_ARGUMENT",
              "description": "Client specified an invalid argument, request body or query param."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "Conflict": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "CONFLICT"
              ],
              "default": "CONFLICT",
              "description": "A specified resource duplicate entry found"
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "FailedPrecondition": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "FAILED_PRECONDITION"
              ],
              "default": "FAILED_PRECONDITION",
              "description": "Request cannot be executed in the current system state."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "OutOfRange": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "OUT_OF_RANGE"
              ],
              "default": "OUT_OF_RANGE",
              "description": "Client specified an invalid range"
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "Unauthenticated": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "UNAUTHENTICATED"
              ],
              "default": "UNAUTHENTICATED",
              "description": "Request not authenticated due to missing, invalid, or expired credentials."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "PermissionDenied": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "PERMISSION_DENIED"
              ],
              "default": "PERMISSION_DENIED",
              "description": "Client does not have sufficient permissions to perform this action."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "NotFound": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "NOT_FOUND"
              ],
              "default": "NOT_FOUND",
              "description": "The specified resource is not found"
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "Aborted": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "ABORTED"
              ],
              "default": "ABORTED",
              "description": "Concurrency conflict."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "AlreadyExists": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "ALREADY_EXISTS"
              ],
              "default": "ALREADY_EXISTS",
              "description": "The resource that a client tried to create already exists."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "TooManyRequests": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "TOO_MANY_REQUESTS"
              ],
              "default": "TOO_MANY_REQUESTS",
              "description": "Either out of resource quota or reaching rate limiting."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "DataLoss": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "DATA_LOSS"
              ],
              "default": "DATA_LOSS",
              "description": "Unrecoverable data loss or data corruption."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "Internal": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "INTERNAL"
              ],
              "default": "INTERNAL",
              "description": "Unknown server error.Typically a server bug."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "BadGateway": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "BAD_GATEWAY"
              ],
              "default": "BAD_GATEWAY",
              "description": "Couldn't reach an upstream internal service."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "Unavailable": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "UNAVAILABLE"
              ],
              "default": "UNAVAILABLE",
              "description": "Request timeout exceeded"
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "Timeout": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "TIMEOUT"
              ],
              "default": "TIMEOUT",
              "description": "Request timeout exceeded"
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "NotImplemented": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "NOT_IMPLEMENTED"
              ],
              "default": "NOT_IMPLEMENTED",
              "description": "This functionality is not implemented yet"
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "AuthenticationRequired": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "AUTHENTICATION_REQUIRED"
              ],
              "default": "AUTHENTICATION_REQUIRED",
              "description": "New authentication is required"
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "NotFoundAndOutOfRange": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "NOT_FOUND",
                "OUT_OF_RANGE"
              ],
              "default": "NOT_FOUND",
              "description": "Not found."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "MethodNotAllowed": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "METHOD_NOT_ALLOWED"
              ],
              "default": "METHOD_NOT_ALLOWED",
              "description": "The requested method is not allowed/supported on the target resource."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "NotAcceptable": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "NOT_ACCEPTABLE"
              ],
              "default": "NOT_ACCEPTABLE",
              "description": "The server can't produce a response matching the content requested by the client through Accept-* headers."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    },
    "UnsupportedMediaType": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "UNSUPPORTED_MEDIA_TYPE"
              ],
              "default": "UNSUPPORTED_MEDIA_TYPE",
              "description": "The server refuses to accept the request because the payload format is in an unsupported format."
            }
          }
        },
        {
          "$ref": "#/definitions/ModelError"
        }
      ]
    }
  },
  "parameters": {
    "x-correlator": {
      "in": "header",
      "name": "x-correlator",
      "type": "string",
      "required": false,
      "description": "Correlation id for the different services"
    },
    "Page": {
      "name": "page",
      "in": "query",
      "description": "Requested page number for pagination purpose. If not included, page 1 is returned.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 1
    },
    "PerPage": {
      "name": "per_page",
      "in": "query",
      "description": "Number of element per page. If not included, a default number of 100 elements per page are returned.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 100
    }
  }
}