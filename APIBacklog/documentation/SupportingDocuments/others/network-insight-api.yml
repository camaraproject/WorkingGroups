---
    openapi: 3.0.2
    info:
      title: Network Insights API
      version: '0.2'
    servers:
    - url: http://localhost:4001

    tags:

    - name: Network Monitoring Policy Management
      description: Define KPIs for key network metrics as required for the application to ensure the end users of the application are getting the optimal user experience. KPIs such as latency, jitter, packetloss, throughput etc

    - name: Network Insights API
      description: Provides insights to network KPIs against specific intents as defined by the developer in the network monitoring policies. **Data can be aggregated at various levels by the network operators ** Device level data requires user's authorization

    paths:

    ###################################################



    ##########  Network Insights API ####################


    ##################################################
      /networkmonitoring/vx.x/policy:
        post:
          tags:
          - Network Monitoring Policy Management
          description: Define network monitoring intents for optimal end user application experience
          requestBody:
            description: List of user object
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/networkMonitoring_policy'
            required: true
          responses:
            "200":
              description: good
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/policy_subscription_response'



      /networkmonitoring/vx.x/policy/{policyId}:
        put:
          parameters:
            - name: policyId
              in: path
              description: subscription Id
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          tags:
          - Network Monitoring Policy Management
          description: update network monitoring intents for optimal end user application experience
          requestBody:
            description: List of user object
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/networkMonitoring_policy'
            required: true
          responses:
            "200":
              description: good
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/policy_subscription_response'
        get:
          tags:
          - Network Monitoring Policy Management
          description: View the network monitoring intents
          parameters:
            - name: policyId
              in: path
              description: subscription Id
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          responses:
            "200":
              description: good
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/networkMonitoring_policy'
        delete:
          tags:
          - Network Monitoring Policy Management
          description: delete
          parameters:
            - name: policyId
              in: path
              description: subscription Id
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          responses:
            "200":
              description: policy has been deleted

      /networkinsight/vx.x/device:
        post:
          tags:
          - Network Insights API
          description: view if network condition of individual device meets the policy requirements or not.
          requestBody:
            description: List of user object
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/user_networkInsight'
            required: true
          responses:
            "200":
              description: good
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/networkInsight_notification'

      /networkinsight/vx.x/device/subscription:
        post:
          tags:
          - Network Insights API
          description: Subscription for monitoring network condition against specific intents for an individual device.
          requestBody:
            description: List of user object
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/user_subscription'
            required: true
          responses:
            "200":
              description: good
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/user_subscription_response'


      /networkinsight/vx.x/device/subscription/{subscriptionId}:
        put:
          tags:
          - Network Insights API
          description: Subscription for monitoring network condition of individual device.
          parameters:
          - name: subscriptionId
            in: path
            description: subscription Id
            required: true
            style: simple
            explode: false
            schema:
              type: string
              format: uuid
          requestBody:
            description: List of user object
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/user_subscription'
            required: true
          responses:
            "200":
              description: good
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/user_subscription_response'
        get:
          tags:
          - Network Insights API
          description: get the user subscription
          parameters:
          - name: subscriptionId
            in: path
            description: subscription Id
            required: true
            style: simple
            explode: false
            schema:
              type: string
              format: uuid
          responses:
            "200":
              description: good
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/user_subscription'
        delete:
          tags:
          - Network Insights API
          description: delete
          parameters:
          - name: subscriptionId
            in: path
            description: subscription Id
            required: true
            style: simple
            explode: false
            schema:
              type: string
              format: uuid
          responses:
            "200":
              description: good

    components:
      schemas:
        maxLatencyMs:
          type: integer
          description: "Maximum response time or latency that the application can handle, in miliseconds"

        throughput_policy:
           type: object
           properties:
             minDownlinkthroughputKbits:
               type: number
             minUplinkthroughputKbits:
               type: number

        throughput_notification:
          type: object
          properties:
            minDownlinkthroughputKbits:
              type: string
              enum:
              - good
              - bad

            minUplinkthroughputKbits:
              type: string
              enum:
              - good
              - bad


        packetloss_policy:
           type: object
           properties:
             maxPacketlossPercent:
               type: number

        packetloss_notification:
          type: object
          properties:
            maxPacketlossPercent:
              type: string
              enum:
              - good
              - bad

        jitter_policy:
           type: object
           properties:
             maxJitterMs:
               type: number

        jitter_notification:
          type: object
          properties:
            maxJitterMs:
              type: string
              enum:
              - good
              - bad

        addtionalKPIs:
          type: object
          properties:
            signalStrength:
              type: string
              enum:
                - excellent
                - good
                - fair
                - poor
                - no signal
            connectivityType:
              type: string
              enum:
              - 5G
              - 4G
              - 3G

        networkMonitoring_policy:
         type: object
         properties:
           maxLatencyMs:
             type: object
             $ref: '#/components/schemas/maxLatencyMs'
           throughput:
             type: object
             $ref: '#/components/schemas/throughput_policy'
           packetloss:
             type: object
             $ref: '#/components/schemas/packetloss_policy'
           jitter:
             type: object
             $ref: '#/components/schemas/jitter_policy'


        networkInsight_notification:
          type: object
          properties:
            policyId:
              type: string
              format: uuid
            maxLatencyMs:
              type: string
              enum:
              - good
              - bad
            throughput:
              type: object
              $ref: '#/components/schemas/throughput_notification'
            packetloss:
              type: object
              $ref: '#/components/schemas/packetloss_notification'
            jitter:
             type: object
             $ref: '#/components/schemas/jitter_notification'
            addtionalKPIs:
              type: object
              $ref: '#/components/schemas/addtionalKPIs'

        policy_subscription_response:
          type: object
          properties:
            policyId:
              type: string
              format: uuid

        user_networkInsight:
           type: object
           properties:
            device:
              $ref: "#/components/schemas/Device"
            applicationServer:
              $ref: "#/components/schemas/ApplicationServerEndPoint"
            policyId:
              type: string
              format: uuid
            monitoringDataAggregation:
              enum:
                - FIFTEEN_MIN
                - HOURLY
                - DAILY
            monitoringTimeStamp:
              type: string
              format: date-time
              description: this is a optinal input parameter. A future data and time can be provided for predictive data. If no value is provided then the current date and
                time is used and network data for the monitoring data aggregation is used to check network performance against the policy defined.

        user_subscription:
           type: object
           properties:
            device:
              $ref: "#/components/schemas/Device"
            applicationServer:
              $ref: "#/components/schemas/ApplicationServerEndPoint"
            policyId:
              type: string
              format: uuid
            monitoringFrequency:
              enum:
                - FIFTEEN_MIN
                - HOURLY
                - DAILY
            notificationExpiry:
              $ref: "#/components/schemas/notificationExpiry"
            notificationUrl:
              $ref: "#/components/schemas/notificationUrl"

        notificationExpiry:
          type: object
          minProperties: 1
          properties:
            expiryTime:
              description: Date and time when this subscription will be expired. This parameter is mutually exclusive with the maximumNumberOfNotifications parameter. Either maximumNumberOfNotifications or expiryTime must be provided.
              type: string
              format: date-time
              nullable: true
            maximumNumberOfNotifications:
              description: Identifies the maximum number of event notifications to be sent. This parameter is mutually exclusive with the expiryTime parameter. Either maximumNumberOfNotifications or expiryTime must be provided.
              type: integer
              format: int32
              nullable: true
        Device:
          type: object
          minProperties: 1
          properties:
            phoneNumber:
              $ref: "#/components/schemas/PhoneNumber"
            networkAccessIdentifier:
              $ref: "#/components/schemas/NetworkAccessIdentifier"
            ipv4Address:
              $ref: "#/components/schemas/Ipv4Address"
            ipv6Address:
              $ref: "#/components/schemas/Ipv6Address"
          description: Device identifier

        ApplicationServerEndPoint:
          type: object
          minProperties: 1
          properties:
            serverEndPointId:
              type: string
              format: uuid
            ern:
              type: string
            ipv4Address:
              $ref: "#/components/schemas/Ipv4Address"
            ipv6Address:
              $ref: "#/components/schemas/Ipv6Address"
          description: Application server identifier
        NetworkAccessIdentifier:
          type: string
          example: "123456789@domain.com"
        PhoneNumber:
          type: string
          pattern: '^\+?[0-9]{5,15}$'
          example: "123456789"
          description: Subscriber number in E.164 format (starting with country code). Optionally prefixed with '+'.
        Ipv4Address:
          type: string
          format: ipv4
          pattern: '^([01]?\d\d?|2[0-4]\d|25[0-5])(?:\.(?:[01]?\d\d?|2[0-4]\d|25[0-5])){3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$'
          example: "192.168.0.1/24"
          description: |
            IPv4 address may be specified in form <address/mask> as:
              - address - an IPv4 number in dotted-quad form 1.2.3.4. Only this exact IP number will match the flow control rule.
              - address/mask - an IP number as above with a mask width of the form 1.2.3.4/24.
                In this case, all IP numbers from 1.2.3.0 to 1.2.3.255 will match. The bit width MUST be valid for the IP version.
        Ipv6Address:
          type: string
          format: ipv6
          allOf:
            - pattern: '^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))?$'
            - pattern: '^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\/.+)?$'
          example: "2001:db8:85a3:8d3:1319:8a2e:370:7344"
          description: |
            IPv6 address, following IETF 5952 format, may be specified in form <address/mask> as:
              - address - The /128 subnet is optional for single addresses:
                - 2001:db8:85a3:8d3:1319:8a2e:370:7344
                - 2001:db8:85a3:8d3:1319:8a2e:370:7344/128
              - address/mask - an IP v6 number with a mask:
                - 2001:db8:85a3:8d3::0/64
                - 2001:db8:85a3:8d3::/64

        notificationUrl:
          type: object
          properties:
            callback_url:
              type: string
              format: uri
              example: "https://application-server.com"
              description: Allows asynchronous delivery of session related events
            notificationAuthToken:
              type: string
              example: "c8974e592c2fa383d4a3960714"
              description: Authentication token for callback API

        user_subscription_response:
           type: object
           properties:
             subscriptionId:
               type: string
               format: uuid
